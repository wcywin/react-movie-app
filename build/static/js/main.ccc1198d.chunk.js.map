{"version":3,"sources":["views/MovieDetailsView/MovieDetailsView.module.scss","modules/MovieItem/MovieItem.module.scss","modules/TopBar/TopBar.module.scss","modules/SearchInput/SearchInput.module.scss","modules/TypeHeader/TypeHeader.module.scss","components/Loader/Loader.module.scss","views/App/App.module.scss","components/Button/BaseButton.module.scss","modules/MovieList/MovieList.module.scss","views/SearchView/SearchView.module.scss","components/Logo/Logo.module.scss","modules/GlobalLoader/GlobalLoader.module.scss","components/Svg/Svg.tsx","assets/svg/svg.js","modules/MovieItem/MovieItem.tsx","modules/MovieList/MovieList.tsx","store/reducers/appSlice/initialState.ts","store/reducers/appSlice/appSlice.ts","store/reducers/commonSlice/initialState.ts","store/reducers/commonSlice/commonSlice.ts","services/api.ts","utils/getMoviesWithQuery.ts","components/Logo/Logo.tsx","modules/SearchInput/SearchInput.tsx","modules/TopBar/TopBar.tsx","modules/TypeHeader/TypeHeader.tsx","components/Loader/Loader.tsx","modules/GlobalLoader/GlobalLoader.tsx","views/SearchView/SearchView.tsx","utils/getMovieDetails.ts","components/Button/BaseButton.tsx","views/MovieDetailsView/MovieDetailsView.tsx","contants/ulrs.js","router/routes/BaseRoutes.tsx","views/App/App.tsx","reportWebVitals.ts","store/rootReducer.ts","store/store.ts","index.tsx"],"names":["module","exports","Svg","icon","size","svgClassName","className","dangerouslySetInnerHTML","__html","markup","style","minWidth","maxWidth","width","minHeight","maxHeight","height","viewBox","iconStar","iconSearch","starsArray","MovieItem","movieTitle","id","posterUrl","title","year","styles","root","to","toLowerCase","replace","split","join","image","loading","src","alt","rating","map","index","svg","MovieList","movies","movie","imdbID","Poster","Title","Year","initialState","movieDetails","pageNumber","query","totalResults","appSlice","createSlice","name","reducers","setSearchedMovies","state","payload","setLastSearchedQuery","setTotalResults","setPageNumber","setMovieDetails","actions","isLoading","commonSlice","setIsLoading","dataBaseURL","api","axios","create","baseURL","responseType","getMoviesWithQuery","page","get","params","s","type","Logo","mapsDispatchToProps","setIsLoadingAction","setLastSearchedQueryAction","setPageNumberAction","setSearchedMoviesAction","setTotalResultsAction","connect","app","useState","searchTerm","setSearchTerm","onSubmit","e","a","preventDefault","then","data","Search","finally","input","value","onChange","target","placeholder","TopBar","logo","search","navLinks","TypeHeader","subtitle","Loader","spinner","text","common","useEffect","dataLength","length","next","hasMore","loader","endMessage","getMovieDetails","i","BaseButton","color","children","button","setMovieDetailsAction","useParams","topWrapper","details","actors","Actors","posterContainer","poster","URL_MAIN","BaseRoutes","exact","path","component","SearchView","MovieDetailsView","App","container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","AppReducer","CommonReducer","persistConfig","key","storage","persistedRootReducer","persistReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccc1198d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MovieDetailsView_root__2cUKU\",\"topWrapper\":\"MovieDetailsView_topWrapper__2PDhw\",\"details\":\"MovieDetailsView_details__7EGHA\",\"year\":\"MovieDetailsView_year__MlgJ-\",\"rating\":\"MovieDetailsView_rating__2LjAw\",\"svg\":\"MovieDetailsView_svg__2UcV8\",\"title\":\"MovieDetailsView_title__2qCsY\",\"actors\":\"MovieDetailsView_actors__Dtk3U\",\"posterContainer\":\"MovieDetailsView_posterContainer__2xMBq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MovieItem_root__3ufdy\",\"image\":\"MovieItem_image__3OamB\",\"title\":\"MovieItem_title__3GuLt\",\"rating\":\"MovieItem_rating__3RV1v\",\"svg\":\"MovieItem_svg__16ErL\",\"year\":\"MovieItem_year__3ogx1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TopBar_root__1LSIB\",\"logo\":\"TopBar_logo__TtaXv\",\"search\":\"TopBar_search__3q17w\",\"navLinks\":\"TopBar_navLinks__1UJd6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchInput_root__mFH4_\",\"input\":\"SearchInput_input__hi4Nr\",\"svg\":\"SearchInput_svg__3hB1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TypeHeader_root__3akDz\",\"title\":\"TypeHeader_title__20ex2\",\"subtitle\":\"TypeHeader_subtitle__3W_2z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Loader_root__3_wvn\",\"spinner\":\"Loader_spinner__2iQ3R\",\"loading\":\"Loader_loading__gwu-t\",\"text\":\"Loader_text__hxVSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__1f8Ki\",\"container\":\"App_container__-dw0C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BaseButton_root__1QZoB\",\"button\":\"BaseButton_button__2bFaJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MovieList_root__1Cy1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SearchView_root__2OCEH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Logo_root__eE-LJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"GlobalLoader_root__SF4g9\"};","import React from 'react'\r\n\r\ninterface SvgProps {\r\n  icon: any,\r\n  size: number,\r\n  svgClassName: string,\r\n}\r\n\r\nconst Svg: React.FC<SvgProps> = ({\r\n  icon,\r\n  size,\r\n  svgClassName,\r\n}) => {\r\n  return (\r\n    <svg\r\n      className={svgClassName}\r\n      dangerouslySetInnerHTML={{ // @ts-ignore\r\n        __html: icon.markup,\r\n      }}\r\n      style={{\r\n        minWidth: `${size}rem`,\r\n        maxWidth: `${size}rem`,\r\n        width: `${size}rem`,\r\n        minHeight: `${size}rem`,\r\n        maxHeight: `${size}rem`,\r\n        height: `${size}rem`,\r\n      }}\r\n      viewBox={icon.viewBox}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Svg\r\n","export const iconStar = {\r\n  markup: '<path data-name=\"Path 5\" d=\"M15.8 5.8c-.2-.8-1.5-1-3-1.1a6.3 6.3 0 01-1.9-.5 6.3 6.3 0 01-1-1.7C9.3 1.2 8.8 0 8 0c-.7 0-1.3 1.2-2 2.5a6.4 6.4 0 01-1 1.7 6.4 6.4 0 01-1.9.4C1.6 4.8.3 5 0 5.7s.8 1.7 1.8 2.7a6.4 6.4 0 011.3 1.4 6.3 6.3 0 01-.2 2c-.3 1.4-.5 2.7.1 3.2a1 1 0 00.6.2 7 7 0 002.5-1 6.3 6.3 0 011.8-.9 6.2 6.2 0 011.8.9 6.6 6.6 0 002.6 1 .9.9 0 00.5-.2c.6-.4.4-1.7.1-3.2a6.4 6.4 0 01-.2-2A6.4 6.4 0 0114 8.5c1-1 2-1.9 1.8-2.6z\" fill=\"currentColor\"/>',\r\n  viewBox: '0 0 16 16'\r\n}\r\n\r\nexport const iconSearch = {\r\n  markup: '<path data-name=\"Path 4\" d=\"M13.1 12.4L9.3 8.5a5.2 5.2 0 10-.8.8l3.9 3.8a.3.3 0 00.3 0l.4-.4a.3.3 0 000-.3zm-7.9-3a4.1 4.1 0 114.2-4.2 4.1 4.1 0 01-4.2 4.2z\" fill=\"currentColor\"/>',\r\n  viewBox: '0 0 13 13'\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport styles from './MovieItem.module.scss'\r\nimport Svg from '../../components/Svg/Svg'\r\n\r\nimport { iconStar } from '../../assets/svg/svg'\r\n\r\ninterface MovieItemProps {\r\n  id: string,\r\n  posterUrl: string,\r\n  title: string,\r\n  year: number,\r\n}\r\n\r\nconst starsArray = [1, 2, 3, 4, 5];\r\n\r\nconst createSlugFromTitle = (movieTitle: string) => movieTitle\r\n  .toLowerCase()\r\n  .replace(/[,.-]/g, '')\r\n  .split(' ')\r\n  .join('-')\r\n\r\nconst MovieItem: React.FC<MovieItemProps> = ({\r\n  id,\r\n  posterUrl,\r\n  title,\r\n  year,\r\n}) => (\r\n  <Link\r\n    className={styles.root}\r\n    to={`/movie/${id}/details/${createSlugFromTitle(title)}`}\r\n  >\r\n    <img\r\n      className={styles.image}\r\n      loading=\"lazy\"\r\n      src={posterUrl}\r\n      alt={title}\r\n    />\r\n    <div className={styles.year}>\r\n      {year}\r\n    </div>\r\n    <div className={styles.rating}>\r\n      {starsArray.map(index => (\r\n        <Svg\r\n          key={index}\r\n          icon={iconStar}\r\n          size={1.6}\r\n          svgClassName={styles.svg}\r\n        />\r\n      ))}\r\n    </div>\r\n    <div className={styles.title}>\r\n      {title}\r\n    </div>\r\n  </Link>\r\n)\r\n\r\nexport default MovieItem\r\n","import React from 'react'\r\nimport styles from './MovieList.module.scss'\r\nimport MovieItem from '../MovieItem/MovieItem'\r\n\r\ninterface MovieListProps {\r\n  movies: object[]\r\n}\r\n\r\nconst MovieList: React.FC<MovieListProps> = ({\r\n  movies,\r\n}) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      {movies.map(movie => {\r\n        return (\r\n          <MovieItem\r\n            // @ts-ignore\r\n            key={movie.imdbID}\r\n            // @ts-ignore\r\n            id={movie.imdbID}\r\n            // @ts-ignore\r\n            posterUrl={movie.Poster}\r\n            // @ts-ignore\r\n            title={movie.Title}\r\n            // @ts-ignore\r\n            year={movie.Year}\r\n          />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieList\r\n","const initialState = {\r\n  movies: null,\r\n  movieDetails: null,\r\n  pageNumber: 1,\r\n  query: 'Love',\r\n  totalResults: null,\r\n}\r\n\r\nexport default initialState\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport initialState from './initialState'\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    setSearchedMovies(state, { payload }) {\r\n      state.movies = payload\r\n    },\r\n    setLastSearchedQuery(state, { payload }) {\r\n      state.query = payload\r\n    },\r\n    setTotalResults(state, { payload }) {\r\n      state.totalResults = payload\r\n    },\r\n    setPageNumber(state, { payload }) {\r\n      state.pageNumber = payload\r\n    },\r\n    setMovieDetails(state, { payload }) {\r\n      state.movieDetails = payload\r\n    },\r\n  }\r\n})\r\n\r\nexport const {\r\n  setLastSearchedQuery,\r\n  setMovieDetails,\r\n  setPageNumber,\r\n  setSearchedMovies,\r\n  setTotalResults,\r\n} = appSlice.actions\r\n\r\nexport default appSlice.reducer","const initialState = {\r\n  isLoading: false,\r\n}\r\n\r\nexport default initialState\r\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport initialState from './initialState'\r\n\r\nconst commonSlice = createSlice({\r\n  name: 'common',\r\n  initialState,\r\n  reducers: {\r\n    setIsLoading(state, { payload }) {\r\n      state.isLoading = payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const {\r\n  setIsLoading,\r\n} = commonSlice.actions\r\n\r\nexport default commonSlice.reducer\r\n","import axios from 'axios'\r\n\r\nconst apiKey = 'b9bd48a6';\r\n// const apiKey = process.env.REACT_APP_OMDB_API_KEY;\r\nconst dataBaseURL = `http://www.omdbapi.com/?apikey=${apiKey}`;\r\n\r\nconst api = axios.create({\r\n  baseURL: dataBaseURL,\r\n  responseType: 'json',\r\n})\r\n\r\nexport default api\r\n","import api from '../services/api'\r\n\r\nconst getMoviesWithQuery = (query: string, page: number = 1) => {\r\n  return api.get('', {\r\n    params: {\r\n      s: query,\r\n      type: 'movie',\r\n      page,\r\n    }\r\n  })\r\n}\r\n\r\nexport default getMoviesWithQuery\r\n","import React from 'react'\r\n\r\nimport styles from './Logo.module.scss'\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className={styles.root}>\r\n      MoviesApp\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logo\r\n","import React, {Dispatch, useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styles from './SearchInput.module.scss'\r\nimport { setIsLoading } from '../../store/reducers/commonSlice/commonSlice'\r\nimport {\r\n  setLastSearchedQuery,\r\n  setPageNumber,\r\n  setSearchedMovies,\r\n  setTotalResults,\r\n} from '../../store/reducers/appSlice/appSlice'\r\nimport { ActionCreatorWithPayload } from '@reduxjs/toolkit'\r\nimport getMoviesWithQuery from '../../utils/getMoviesWithQuery'\r\nimport Svg from '../../components/Svg/Svg'\r\nimport { iconSearch } from '../../assets/svg/svg'\r\n\r\ninterface SearchInputDispatchProps {\r\n  pageNumber: number,\r\n  setIsLoadingAction: Dispatch<ActionCreatorWithPayload<boolean>>,\r\n  setLastSearchedQueryAction: Dispatch<ActionCreatorWithPayload<string>>,\r\n  setPageNumberAction: Dispatch<ActionCreatorWithPayload<number>>\r\n  setSearchedMoviesAction: Dispatch<ActionCreatorWithPayload<object[]>>\r\n  setTotalResultsAction: Dispatch<ActionCreatorWithPayload<object[]>>\r\n}\r\n\r\nconst SearchInput: React.FC<SearchInputDispatchProps> = ({\r\n  pageNumber,\r\n  setIsLoadingAction,\r\n  setLastSearchedQueryAction,\r\n  setPageNumberAction,\r\n  setSearchedMoviesAction,\r\n  setTotalResultsAction,\r\n}) => {\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n\r\n  const onSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (!searchTerm) {\r\n      return\r\n    }\r\n\r\n    // @ts-ignore\r\n    setIsLoadingAction(true)\r\n    // @ts-ignore\r\n    setLastSearchedQueryAction(searchTerm)\r\n    // @ts-ignore\r\n    setPageNumberAction(1)\r\n\r\n    await getMoviesWithQuery(searchTerm, pageNumber)\r\n      .then(({ data }) => {\r\n        setSearchedMoviesAction(data.Search)\r\n        setTotalResultsAction(data.totalResults)\r\n      })\r\n      .finally(() =>  {\r\n        // @ts-ignore\r\n        setIsLoadingAction(false)\r\n        setSearchTerm('')\r\n      })\r\n  };\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <form\r\n      className={styles.root}\r\n      onSubmit={onSubmit}\r\n    >\r\n      <Svg\r\n        icon={iconSearch}\r\n        size={1.3}\r\n        svgClassName={styles.svg}\r\n      />\r\n      <input\r\n        name=\"search\"\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={searchTerm}\r\n        onChange={onChange}\r\n        placeholder=\"Search movies\"\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  // @ts-ignore\r\n  app,\r\n}) => ({\r\n  pageNumber: app.pageNumber,\r\n})\r\n\r\nconst mapsDispatchToProps = {\r\n  setIsLoadingAction: setIsLoading,\r\n  setLastSearchedQueryAction: setLastSearchedQuery,\r\n  setPageNumberAction: setPageNumber,\r\n  setSearchedMoviesAction: setSearchedMovies,\r\n  setTotalResultsAction: setTotalResults,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(SearchInput)\r\n","import React from 'react'\r\nimport Logo from '../../components/Logo/Logo'\r\nimport SearchInput from '../SearchInput/SearchInput'\r\n\r\nimport styles from './TopBar.module.scss'\r\n\r\nconst TopBar = () => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className={styles.logo}>\r\n        <Logo />\r\n      </div>\r\n      <div className={styles.search}>\r\n        {/*// @ts-ignore*/}\r\n        <SearchInput />\r\n      </div>\r\n      <div className={styles.navLinks} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopBar\r\n","import React from 'react'\r\n\r\nimport styles from './TypeHeader.module.scss'\r\n\r\nconst TypeHeader = () => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className={styles.title}>\r\n        Your Movies\r\n      </div>\r\n      <div className={styles.subtitle}>\r\n        Below you can find the movies that came back from your search\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TypeHeader\r\n","import React from 'react'\r\nimport styles from './Loader.module.scss'\r\n\r\ninterface loaderProps {\r\n  size?: number,\r\n}\r\n\r\nconst Loader: React.FC<loaderProps> = ({\r\n  size,\r\n}) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <div\r\n        className={styles.spinner}\r\n        style={{\r\n          width: `${size}rem`,\r\n          height: `${size}rem`,\r\n        }}\r\n      />\r\n      <p className={styles.text}>\r\n        Loading. Please wait...\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Loader from '../../components/Loader/Loader'\r\nimport styles from './GlobalLoader.module.scss'\r\n\r\ninterface GlobalLoaderProps {\r\n  isLoading: boolean,\r\n}\r\n\r\n// @ts-ignore\r\nconst GlobalLoader: React.FC<GlobalLoaderProps> = ({\r\n  isLoading,\r\n}) => {\r\n  if (!isLoading) {\r\n    return false\r\n  }\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <Loader size={5} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  // @ts-ignore\r\n  common,\r\n}) => ({\r\n  isLoading: common.isLoading,\r\n})\r\n\r\nexport default connect(mapStateToProps)(GlobalLoader)\r\n","import React, { Dispatch, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MovieList from '../../modules/MovieList/MovieList'\r\n\r\nimport styles from './SearchView.module.scss'\r\nimport {\r\n  ActionCreatorWithPayload,\r\n} from '@reduxjs/toolkit'\r\nimport { setPageNumber, setSearchedMovies, setTotalResults } from '../../store/reducers/appSlice/appSlice'\r\nimport { setIsLoading } from '../../store/reducers/commonSlice/commonSlice'\r\nimport getMoviesWithQuery from '../../utils/getMoviesWithQuery'\r\nimport TopBar from '../../modules/TopBar/TopBar'\r\nimport TypeHeader from '../../modules/TypeHeader/TypeHeader'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport GlobalLoader from '../../modules/GlobalLoader/GlobalLoader'\r\n\r\ninterface SearchViewProps {\r\n  movies: object[],\r\n  pageNumber: number,\r\n  setIsLoadingAction: Dispatch<ActionCreatorWithPayload<boolean>>,\r\n  setPageNumberAction: Dispatch<ActionCreatorWithPayload<number>>\r\n  setSearchedMoviesAction: Dispatch<ActionCreatorWithPayload<object[]>>\r\n  setTotalResultsAction: Dispatch<ActionCreatorWithPayload<object[]>>\r\n  query: string,\r\n  totalResults: number,\r\n}\r\n\r\nconst SearchView: React.FC<SearchViewProps> = ({\r\n  movies,\r\n  pageNumber,\r\n  setIsLoadingAction,\r\n  setPageNumberAction,\r\n  setSearchedMoviesAction,\r\n  setTotalResultsAction,\r\n  query,\r\n  totalResults,\r\n}) => {\r\n  if (!movies && !totalResults) {\r\n    // @ts-ignore\r\n    setIsLoadingAction(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      // @ts-ignore\r\n      setPageNumberAction(1)\r\n      await getMoviesWithQuery(query, pageNumber)\r\n        .then(({ data }) => {\r\n          setTotalResultsAction(data.totalResults)\r\n          setSearchedMoviesAction(data.Search)\r\n        })\r\n        .finally(() => {\r\n          // @ts-ignore\r\n          setPageNumberAction(pageNumber + 1)\r\n          // @ts-ignore\r\n          setIsLoadingAction(false)\r\n        })})();\r\n  }, [ // eslint-disable-line react-hooks/exhaustive-deps\r\n    setIsLoadingAction,\r\n    setPageNumberAction,\r\n    setSearchedMoviesAction,\r\n  ]);\r\n\r\n  const fetchMoreData = () => {\r\n    if (movies?.length < totalResults) {\r\n      // @ts-ignore\r\n      setPageNumberAction(pageNumber + 1)\r\n    }\r\n    getMoviesWithQuery(query, pageNumber)\r\n      // @ts-ignore\r\n      .then(({ data }) => setSearchedMoviesAction([...movies, ...data.Search]))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <div className={styles.root}>\r\n        {movies ? (\r\n          <>\r\n            <TypeHeader />\r\n            <InfiniteScroll\r\n              dataLength={movies.length}\r\n              next={fetchMoreData}\r\n              hasMore={true}\r\n              loader={<GlobalLoader />}\r\n              endMessage={<h4>This is the end</h4>}\r\n            >\r\n              <MovieList movies={movies} />\r\n            </InfiniteScroll>\r\n          </>\r\n        ) : (\r\n          <div>No movies under this query. Try again!</div>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  // @ts-ignore\r\n  app,\r\n}) => ({\r\n  movies: app.movies,\r\n  pageNumber: app.pageNumber,\r\n  query: app.query,\r\n  totalResults: app.totalResults,\r\n})\r\n\r\nconst mapsDispatchToProps = {\r\n  setPageNumberAction: setPageNumber,\r\n  setSearchedMoviesAction: setSearchedMovies,\r\n  setIsLoadingAction: setIsLoading,\r\n  setTotalResultsAction: setTotalResults,\r\n}\r\n\r\n// @ts-ignore\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(SearchView)\r\n","import api from '../services/api'\r\n\r\nconst getMovieDetails = (id: string) => {\r\n  return api.get('', {\r\n    params: {\r\n      i: id,\r\n      type: 'movie',\r\n    }\r\n  })\r\n}\r\n\r\nexport default getMovieDetails\r\n","import React from 'react'\r\n\r\nimport styles from './BaseButton.module.scss'\r\n\r\ntype BaseButtonProps = {\r\n  color?: string\r\n}\r\n\r\nconst BaseButton: React.FC<BaseButtonProps> = ({ color, children}) => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <div\r\n        className={styles.button}\r\n        style={{\r\n          color,\r\n        }}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BaseButton\r\n","import React, { Dispatch, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport { setMovieDetails } from '../../store/reducers/appSlice/appSlice'\r\nimport { setIsLoading } from '../../store/reducers/commonSlice/commonSlice'\r\nimport { ActionCreatorWithPayload } from '@reduxjs/toolkit'\r\nimport getMovieDetails from '../../utils/getMovieDetails'\r\n\r\nimport styles from './MovieDetailsView.module.scss'\r\nimport Svg from '../../components/Svg/Svg'\r\nimport { iconStar } from '../../assets/svg/svg'\r\nimport BaseButton from '../../components/Button/BaseButton'\r\n\r\ninterface MovieDetailsViewDispatchProps {\r\n  movieDetails: object,\r\n  setIsLoadingAction: Dispatch<ActionCreatorWithPayload<boolean>>,\r\n  setMovieDetailsAction: Dispatch<ActionCreatorWithPayload<object>>,\r\n}\r\n\r\nconst starsArray = [1, 2, 3, 4, 5];\r\n\r\nconst MovieDetailsView: React.FC<MovieDetailsViewDispatchProps> = ({\r\n  movieDetails,\r\n  setIsLoadingAction,\r\n  setMovieDetailsAction,\r\n}) => {\r\n  // @ts-ignore\r\n  const { id } = useParams()\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      // @ts-ignore\r\n      setIsLoadingAction(true)\r\n      await getMovieDetails(id)\r\n        .then(({ data }) => setMovieDetailsAction(data))\r\n        // @ts-ignore\r\n        .finally(() => setIsLoadingAction(false))\r\n    })()\r\n  }, [\r\n    id,\r\n    setIsLoadingAction,\r\n    setMovieDetailsAction,\r\n  ])\r\n\r\n  return (\r\n    <>\r\n      {movieDetails && (\r\n        <div className={styles.root}>\r\n          <div className={styles.topWrapper}>\r\n            <div className={styles.details}>\r\n              <div className={styles.year}>\r\n                {/*// @ts-ignore*/}\r\n                {movieDetails.Year}\r\n              </div>\r\n              <div className={styles.rating}>\r\n                {starsArray.map(index => (\r\n                  <Svg\r\n                    key={index}\r\n                    icon={iconStar}\r\n                    size={1.6}\r\n                    svgClassName={styles.svg}\r\n                  />\r\n                ))}\r\n              </div>\r\n              <div className={styles.title}>\r\n                {/*// @ts-ignore*/}\r\n                {movieDetails.Title}\r\n              </div>\r\n              <div className={styles.actors}>\r\n                {/*// @ts-ignore*/}\r\n                {movieDetails.Actors}\r\n              </div>\r\n              <BaseButton>\r\n                Oglądaj\r\n              </BaseButton>\r\n            </div>\r\n            <div className={styles.posterContainer}>\r\n              <img\r\n                className={styles.poster}\r\n                // @ts-ignore\r\n                src={movieDetails.Poster}\r\n                // @ts-ignore\r\n                alt={movieDetails.Title}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  // @ts-ignore\r\n  app,\r\n}) => ({\r\n  movieDetails: app.movieDetails\r\n})\r\n\r\nconst mapsDispatchToProps = {\r\n  setIsLoadingAction: setIsLoading,\r\n  setMovieDetailsAction: setMovieDetails,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapsDispatchToProps)(MovieDetailsView)\r\n","export const URL_MAIN = {\r\n  search: '/',\r\n  movieDetails: '/movie/:id/details/:slug',\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport SearchView from '../../views/SearchView/SearchView'\r\nimport MovieDetailsView from '../../views/MovieDetailsView/MovieDetailsView'\r\nimport {URL_MAIN} from '../../contants/ulrs'\r\n\r\nconst BaseRoutes = () => (\r\n  <Switch>\r\n    <Route exact path={URL_MAIN.search} component={SearchView} />\r\n    {/*<Route exact path={URL_MAIN.movieDetails} component={MovieDetailsView} />*/}\r\n    <Route exact path={'/movie/:id/details/:slug'} component={MovieDetailsView} />\r\n  </Switch>\r\n)\r\n\r\nexport default BaseRoutes\r\n","import React  from 'react'\nimport styles from './App.module.scss'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport BaseRoutes from '../../router/routes/BaseRoutes'\nimport GlobalLoader from '../../modules/GlobalLoader/GlobalLoader'\n\nconst App = () => {\n  return (\n    <div className={styles.root}>\n      <div className={styles.container}>\n        <GlobalLoader />\n        <Router>\n          <BaseRoutes />\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport AppReducer from './reducers/appSlice/appSlice'\r\nimport CommonReducer from './reducers/commonSlice/commonSlice'\r\n\r\nconst rootReducer = combineReducers({\r\n  app: AppReducer,\r\n  common: CommonReducer,\r\n})\r\n\r\nexport default rootReducer\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport rootReducer from './rootReducer'\r\nimport { persistReducer } from 'redux-persist'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedRootReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nconst store = configureStore({\r\n  reducer: persistedRootReducer,\r\n})\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './views/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}